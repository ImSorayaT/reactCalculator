[{"/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/index.js":"1","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/App.js":"2","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/reportWebVitals.js":"3","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/calculator.js":"4","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/Calculator.js":"5","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/CalculatorDisplay.js":"6","/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/index.js":"7","/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/App.js":"8","/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/reportWebVitals.js":"9","/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/components/Calculator.js":"10","/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/components/CalculatorDisplay.js":"11"},{"size":535,"mtime":1653405970066,"results":"12","hashOfConfig":"13"},{"size":366,"mtime":1653410974323,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1653405970067,"results":"15","hashOfConfig":"13"},{"size":157,"mtime":1653406606459,"results":"16","hashOfConfig":"13"},{"size":10851,"mtime":1653945068488,"results":"17","hashOfConfig":"13"},{"size":6551,"mtime":1653938148569,"results":"18","hashOfConfig":"13"},{"size":535,"mtime":1653405970066,"results":"19","hashOfConfig":"20"},{"size":366,"mtime":1653410974323,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1653405970067,"results":"22","hashOfConfig":"20"},{"size":10851,"mtime":1653945068488,"results":"23","hashOfConfig":"20"},{"size":6551,"mtime":1653938148569,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8mx6zr",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"77rj89",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/index.js",[],[],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/App.js",["65"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Calculator } from './components/Calculator';\nimport '../node_modules/semantic-ui-button/button.css';\nimport '../node_modules/semantic-ui-grid/grid.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>calculator</h2>\n    \n      <Calculator />\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/reportWebVitals.js",[],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/calculator.js",["66"],[],"import React from \"react\";\n\nexport class Calculator extends React.Component{\n    render(){\n        return(\n            <h2>calculator</h2>\n        );\n    }\n}\n\nReactDOM.render(\n\n\t<Calculator />,\n\n\tdocument.getElementById('app')\n\n);",[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/Calculator.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],[],"import React from \"react\";\nimport { evaluate } from 'mathjs';\nimport { CalculatorDisplay } from \"./CalculatorDisplay\";\n\nexport class Calculator extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            calculate : '0',\n            display: '0',\n            equals: false\n        };\n\n        this.changeCalculate = this.changeCalculate.bind(this);\n        this.sumCalculate = this.sumCalculate.bind(this);\n        this.clearCalculate = this.clearCalculate.bind(this);\n        this.changeCharge = this.changeCharge.bind(this);\n\n    }\n\n\n    //**\n    // Changes the equation value. \n    // First, it starts a new equation after '='\n        // If not\n            // is the new input Not a Number\n                // if it's a '%'\n                // if it's a '.'\n                // if it's a '+', '-' '*' or '/'\n            // If it is a number\n        //\n    // eg. '+' by '-', so it's not '+-' \n    // or the first '0' by '5', so it's not '05' but just '5'\n    //**\n    changeCalculate(e){\n    \n        this.setState((prevState) => {\n            const newDisplayValue = this.getDisplayValue(e);\n            const newCalcValue = e.target.value;\n\n            const calcLength = prevState.calculate.length; // calculate state count\n            const lastCalcChar = prevState.calculate.slice(-1); // last letter of the calc state\n    \n            const descLength = prevState.display.length; // display state count\n\n            // if equals was not the last button clicked\n            if(this.state.equals == false){\n                \n                if(isNaN(newCalcValue)){ // if the newest input is not a number\n\n                    if(newCalcValue == '%'){ // if the newest input is '%'\n                        \n                        if(!isNaN(lastCalcChar)){\n                            return this.addToCalc(prevState,newCalcValue, newDisplayValue)\n                        }\n                    \n                    }else if(newCalcValue == '.'){  // if the newest input is '.'\n\n                        // if there isn't already a '.'\n                        if(prevState.calculate.indexOf('.') == -1){\n                            \n                            // if the last character is a number\n                            if(!isNaN(lastCalcChar)){\n\n                                // add to previous\n                                return this.addToCalc(prevState,newCalcValue, newDisplayValue)\n\n\n                            // otherwise, unless a character is also a '.'\n                            }else if(lastCalcChar != '.'){\n\n                                // add '.' with a '0' in front of it\n                                return this.addToCalc(prevState, '0' + newCalcValue, '0' + newDisplayValue)\n\n                            }\n                        }\n                    \n                    }else{ // if the newest input is '+', '-', '*' or '/'\n                        //if last input was not a number or '%'\n                        if(isNaN(lastCalcChar) && lastCalcChar != '%'){\n                            if(lastCalcChar !== '.' ){\n                                return ({ \n                                    calculate: prevState.calculate.slice(0, calcLength -1) + newCalcValue,\n                                    display: prevState.display.slice(0, descLength -1) + newDisplayValue,\n                                });\n                            }\n                        }else{\n                            return this.addToCalc(prevState,newCalcValue, newDisplayValue)\n                        }\n                    }\n\n                // if it's a number\n                }else{\n                    // if it's the first input and the number is bigger than zero\n                    if(calcLength == 1 && prevState.calculate == '0' && parseFloat(e.target.value) > 0 ){\n\n                        // replace the previous input\n                        return ({ \n                            calculate: prevState.calculate.slice(0, calcLength -1) + newCalcValue,\n                            display: prevState.display.slice(0, descLength -1) + newDisplayValue,\n                        });\n                    }else{\n                        //\n                        if(lastCalcChar != '%'){\n                            return this.addToCalc(prevState,newCalcValue, newDisplayValue)\n                        }\n\n                    }\n\n                }\n            \n            // if it's first chara after '='\n            }else{            \n                // if new value is not a number\n                if(isNaN(newCalcValue)){\n                    // add to previous values\n                    return this.addToCalc(prevState,newCalcValue, newDisplayValue)\n                }else{\n\n                    // replace the previous value entirely\n                    return ({ \n                        calculate: newCalcValue,\n                        display: newDisplayValue\n                    });\n                }\n            }\n\n        });\n\n        this.clearEquals();\n    }\n\n    // Switches the last number between positive and negative\n    changeCharge(e){\n        this.setState((prevState) => {     \n            // The whole calculation length   \n            const calcLength = prevState.calculate.length; // calculate state count\n\n            // Last Item\n            console.log(prevState.calculate);\n            if(prevState.calculate == 'Infinity' || prevState.calculate == '-Infinity'){\n                \n                if(prevState.calculate == 'Infinity'){\n                    return ({\n                        calculate: '-Infinity',\n                        display: '-Infinity'\n                    });\n                }else{\n                    return ({\n                        calculate: 'Infinity',\n                        display: 'Infinity'\n                    });\n                }\n\n            }else{\n                const calcSplit = prevState.calculate.match(/(?:\\d+\\.)?\\d+/g); // split by numbers\n                const lastItem = calcSplit[calcSplit.length - 1]; // get the last number\n                const lastItemLength = lastItem.length; // char count of the last number\n\n                // Before items\n                const beforeLast = prevState.calculate.charAt( calcLength - lastItem.length - 1);\n                const beforeBeforeLast = prevState.calculate.charAt( calcLength - lastItem.length - 2);\n\n\n                console.log(lastItem);\n\n                // if there's only one number\n                if( calcSplit.length == 1 ){\n                    \n                    // if there's a '-' in front of that number\n                    if(prevState.calculate.charAt( 0) == '-'){\n\n                        // remove the first character\n                        return ({\n                            calculate: prevState.calculate.substr(1),\n                            display: prevState.display.substr(1)\n                        });\n\n                        // if there isn't a '-' in front of that number\n                    }else if(prevState.calculate != '0'){\n\n                        // add '-' in front of the first number\n                        return ({\n                            calculate: '-' + prevState.calculate,\n                            display: '-' + prevState.display\n                        });\n                    }\n                    \n                    // if there's more than one number\n                }else{\n                    const newLastNumber = '-' + lastItem; // add '-' in front of the last number\n\n                    //**\n                    // this is to double-check if the two symbols in front of the last number are not eg. 2 - -2\n                    // if they are the second '-' needs to be removed to make the second 2 a positive number\n                    //**\n\n                    // if the char before the last number and the character before it are not numbers\n                    // and if the character before the character in front of the number isn't a '%'\n                    if(lastItem == '0'){\n\n                        return ({\n                            calculate: prevState.calculate,\n                            display: prevState.display\n                        });\n\n                    }else if( isNaN(beforeLast) && isNaN(beforeBeforeLast) && beforeBeforeLast != '%' ){\n                        \n                        // remove the first character before the last number\n                        return ({\n                            calculate: prevState.calculate.slice(0, calcLength - lastItemLength - 1) + lastItem,\n                            display: prevState.display.slice(0, calcLength - lastItemLength - 1) + lastItem\n                        });\n                    }else{\n                        // replace the last number with the newLastNumber (with the '-')\n                        return ({\n                            calculate: prevState.calculate.toString().slice(0, calcLength - lastItemLength) + newLastNumber,\n                            display: prevState.display.toString().slice(0, calcLength - lastItemLength) + newLastNumber\n                        });\n                    }\n\n                }\n            }\n        });\n    }\n\n    // The clear button\n    clearCalculate(e){\n        this.setState(() => ({ \n            display: '0',\n            calculate: '0',\n        }));\n\n        this.clearEquals();\n    }\n\n    // The equals button\n    sumCalculate(e){\n        let result = '';\n        result = evaluate(this.state.calculate);\n\n        if(result != null){\n            this.setState(() => ({ \n                display: result.toString(),\n                calculate: result.toString(),\n                equals: true\n            }));\n        }\n\n    }\n\n    // clears the state checking if the last input was '='\n    clearEquals(){\n        this.setState(() => ({ \n            equals: false\n        }));\n    }\n\n    // checks if the button has a display attribute\n    // if not, the calculator will display the value attribute\n    // that helps us display '*' as 'x'\n    getDisplayValue(e) {\n\n        let displayValue = '';\n\n        if(e.target.getAttribute('display') !== null){\n            displayValue = e.target.getAttribute('display');\n        }else{\n            displayValue = e.target.value;\n        }\n\n        return displayValue;\n\n    }\n\n    addToCalc(prevState, newCalc, newDesc){\n        return ({ \n            calculate: prevState.calculate + newCalc,\n            display: prevState.display + newDesc,\n        });\n    }\n\n\n    render(){\n        return(  \n           <CalculatorDisplay \n            changeCalculate={this.changeCalculate}  \n            sumCalculate={this.sumCalculate} \n            clearCalculate={this.clearCalculate} \n            changeCharge={this.changeCharge}\n            display={this.state.display} \n            />\n        );\n    }\n}","/Users/sorayataraszka/Documents/CodingProjects/Mine/React/calculator-project/src/components/CalculatorDisplay.js",["84","85"],[],"import React from \"react\";\nimport { evaluate } from 'mathjs';\nimport { Calculator } from \"./Calculator\";\n\nexport class CalculatorDisplay extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.changeCalculate = this.changeCalculate.bind(this);\n        this.sumCalculate = this.sumCalculate.bind(this);\n        this.clearCalculate = this.clearCalculate.bind(this);\n        this.changeCharge = this.changeCharge.bind(this);\n\n    }\n\n    changeCalculate(e){\n        this.props.changeCalculate(e);\n    }\n\n    sumCalculate(e){\n        this.props.sumCalculate(e);\n    }\n\n    clearCalculate(e){\n        this.props.clearCalculate(e);\n    }\n\n    changeCharge(e){\n        this.props.changeCharge(e);\n    }\n\n    \n    render(){\n        const display = this.props.display;\n        return(  \n            <div className={'ui grid calculator'}>\n                <div className={ 'row results-row '}>\n                    <span>{ display }</span>\n                </div>\n                <div className={ 'row'}>\n                    <div className={\"twelve wide column\"}>\n                        <div className={'ui grid'}>\n                            <div className={'three column row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.clearCalculate} className={'ui button fluid'}>C</button>\n                                </div>\n\n                                <div className={'column'}>\n                                    <button onClick={this.changeCharge} className={'ui button fluid'}>+/-</button>\n                                </div>\n\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='%' className={'ui button fluid'}>%</button>\n                                </div>\n                            \n                            </div>\n                            <div className={'three column row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='1' className={'ui button fluid'}>1</button>\n                                </div>\n                                \n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='2' className={'ui button fluid'}>2</button>\n                                </div>\n                                \n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='3' className={'ui button fluid'}>3</button>\n                                </div>\n                            </div>\n\n                            <div className={'three column row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='4' className={'ui button fluid'}>4</button>\n                                </div>\n\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='5' className={'ui button fluid'}>5</button>\n                                </div>\n\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='6' className={'ui button fluid'}>6</button>\n                                </div>\n                            </div>\n                            <div className={'three column row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='7' className={'ui button fluid'}>7</button>\n                                </div>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='8' className={'ui button fluid'}>8</button>\n                                </div>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='9' className={'ui button fluid'}>9</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={\"four wide column\"}>\n                        <div className={'ui grid'}>\n                            <div className={'row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='+' className={'ui button fluid teal'}>+</button>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='-' className={'ui button fluid teal'}>-</button>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='*' display='x' className={'ui button fluid teal'}>x</button>\n                                    </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'column'}>\n                                    <button onClick={this.changeCalculate} value='/' className={'ui button fluid teal'}>/</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={ 'row'}>\n                    <div className={'four wide column'}>\n                        <button onClick={this.changeCalculate} value='0' className={'ui button fluid'}>0</button>\n                    </div>\n                    <div className={'four wide column'}>\n                        <button onClick={this.changeCalculate} value='.' className={'ui button fluid'}>.</button>\n                    </div>\n                    <div className={'eight wide column'}>\n                        <button className={'ui button fluid grey'} onClick={this.sumCalculate} >=</button>\n                    </div>\n                    \n                </div>\n            </div>\n            \n        );\n    }\n}",[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/index.js",[],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/App.js",["86"],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/reportWebVitals.js",[],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/components/Calculator.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],"/Users/sorayataraszka/Documents/CodingProjects/Mine/gitHub/reactCalculator/src/components/CalculatorDisplay.js",["104","105"],[],{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":12},{"ruleId":"110","severity":2,"message":"111","line":11,"column":1,"nodeType":"108","messageId":"112","endLine":11,"endColumn":9},{"ruleId":"113","severity":1,"message":"114","line":49,"column":34,"nodeType":"115","messageId":"116","endLine":49,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":53,"column":37,"nodeType":"115","messageId":"116","endLine":53,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":59,"column":43,"nodeType":"115","messageId":"116","endLine":59,"endColumn":45},{"ruleId":"113","severity":1,"message":"114","line":62,"column":61,"nodeType":"115","messageId":"116","endLine":62,"endColumn":63},{"ruleId":"113","severity":1,"message":"117","line":72,"column":51,"nodeType":"115","messageId":"116","endLine":72,"endColumn":53},{"ruleId":"113","severity":1,"message":"117","line":82,"column":64,"nodeType":"115","messageId":"116","endLine":82,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":97,"column":35,"nodeType":"115","messageId":"116","endLine":97,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":97,"column":63,"nodeType":"115","messageId":"116","endLine":97,"endColumn":65},{"ruleId":"113","severity":1,"message":"117","line":106,"column":41,"nodeType":"115","messageId":"116","endLine":106,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":143,"column":36,"nodeType":"115","messageId":"116","endLine":143,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":143,"column":73,"nodeType":"115","messageId":"116","endLine":143,"endColumn":75},{"ruleId":"113","severity":1,"message":"114","line":145,"column":40,"nodeType":"115","messageId":"116","endLine":145,"endColumn":42},{"ruleId":"113","severity":1,"message":"114","line":170,"column":38,"nodeType":"115","messageId":"116","endLine":170,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":173,"column":55,"nodeType":"115","messageId":"116","endLine":173,"endColumn":57},{"ruleId":"113","severity":1,"message":"117","line":182,"column":50,"nodeType":"115","messageId":"116","endLine":182,"endColumn":52},{"ruleId":"113","severity":1,"message":"114","line":202,"column":33,"nodeType":"115","messageId":"116","endLine":202,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":209,"column":96,"nodeType":"115","messageId":"116","endLine":209,"endColumn":98},{"ruleId":"106","severity":1,"message":"118","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":49,"column":34,"nodeType":"115","messageId":"116","endLine":49,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":53,"column":37,"nodeType":"115","messageId":"116","endLine":53,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":59,"column":43,"nodeType":"115","messageId":"116","endLine":59,"endColumn":45},{"ruleId":"113","severity":1,"message":"114","line":62,"column":61,"nodeType":"115","messageId":"116","endLine":62,"endColumn":63},{"ruleId":"113","severity":1,"message":"117","line":72,"column":51,"nodeType":"115","messageId":"116","endLine":72,"endColumn":53},{"ruleId":"113","severity":1,"message":"117","line":82,"column":64,"nodeType":"115","messageId":"116","endLine":82,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":97,"column":35,"nodeType":"115","messageId":"116","endLine":97,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":97,"column":63,"nodeType":"115","messageId":"116","endLine":97,"endColumn":65},{"ruleId":"113","severity":1,"message":"117","line":106,"column":41,"nodeType":"115","messageId":"116","endLine":106,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":143,"column":36,"nodeType":"115","messageId":"116","endLine":143,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":143,"column":73,"nodeType":"115","messageId":"116","endLine":143,"endColumn":75},{"ruleId":"113","severity":1,"message":"114","line":145,"column":40,"nodeType":"115","messageId":"116","endLine":145,"endColumn":42},{"ruleId":"113","severity":1,"message":"114","line":170,"column":38,"nodeType":"115","messageId":"116","endLine":170,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":173,"column":55,"nodeType":"115","messageId":"116","endLine":173,"endColumn":57},{"ruleId":"113","severity":1,"message":"117","line":182,"column":50,"nodeType":"115","messageId":"116","endLine":182,"endColumn":52},{"ruleId":"113","severity":1,"message":"114","line":202,"column":33,"nodeType":"115","messageId":"116","endLine":202,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":209,"column":96,"nodeType":"115","messageId":"116","endLine":209,"endColumn":98},{"ruleId":"106","severity":1,"message":"118","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-undef","'ReactDOM' is not defined.","undef","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'evaluate' is defined but never used.","'Calculator' is defined but never used."]